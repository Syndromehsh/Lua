local Players = game:GetService("Players") local RunService = game:GetService("RunService") local ReplicatedStorage = game:GetService("ReplicatedStorage") local Workspace = game:GetService("Workspace") local localPlayer = Players.LocalPlayer local SETTINGS = { Enabled = false, AttackRadius = 105, SpinSpeed = 50, AttackCooldown = 0, AutoTargeting = true, } local spinAngle = 0 local lastAttackTime = 0 local mainLoopConnection = nil local renderLoopConnection = nil local gg = {} local function HQBW() local playerChars = {} for _, player in ipairs(Players:GetPlayers()) do if player.Character then playerChars[player.Character] = true end end return playerChars end local function JcB(model) if not model or not model.Parent then return false end local humanoid = model:FindFirstChildOfClass("Humanoid") return humanoid and humanoid.Health > 0 end local function HXM() local playerCharacter = localPlayer.Character if not playerCharacter or not playerCharacter:FindFirstChild("HumanoidRootPart") then return {} end local rootPart = playerCharacter.HumanoidRootPart local playerCharacters = HQBW() local targets = {} local zombiesFolder = Workspace:FindFirstChild("Zombies") or Workspace:FindFirstChild("Enemies") if zombiesFolder then for _, child in ipairs(zombiesFolder:GetChildren()) do if child:IsA("Model") and not playerCharacters[child] and JcB(child) then local targetRoot = child:FindFirstChild("HumanoidRootPart") or child:FindFirstChild("Torso") if targetRoot then local distance = (rootPart.Position - targetRoot.Position).Magnitude if distance <= SETTINGS.AttackRadius then table.insert(targets, { model = child, dist = distance }) end end end end end for _, child in ipairs(Workspace:GetChildren()) do if child:IsA("Model") and not playerCharacters[child] and JcB(child) then local targetRoot = child:FindFirstChild("HumanoidRootPart") or child:FindFirstChild("Torso") if targetRoot then local distance = (rootPart.Position - targetRoot.Position).Magnitude if distance <= SETTINGS.AttackRadius then table.insert(targets, { model = child, dist = distance }) end end end end table.sort(targets, function(a, b) return a.dist < b.dist end) local sorted = {} for _, t in ipairs(targets) do table.insert(sorted, t.model) end return sorted end local function performAttack(target) local playerCharacter = localPlayer.Character if not playerCharacter then return false end local tool = playerCharacter:FindFirstChildOfClass("Tool") if not tool then return false end local remoteEvent = tool:FindFirstChild("RemoteEvent") or tool:FindFirstChild("RemoteFunction") if not remoteEvent then return false end local targetRoot = target:FindFirstChild("HumanoidRootPart") or target:FindFirstChild("Torso") if not targetRoot then return false end local rootPart = playerCharacter.HumanoidRootPart local targetPosition = targetRoot.Position local direction = (targetPosition - rootPart.Position).Unit local hitPosition = direction * 25 local hitNormal = -direction pcall(function() if remoteEvent:IsA("RemoteEvent") then remoteEvent:FireServer("PrepareSwing") task.wait(0) remoteEvent:FireServer("Swing", "Side") remoteEvent:FireServer("HitZombie", target, targetPosition, false, hitPosition, "Torso", hitNormal) else remoteEvent:InvokeServer("Attack", target, targetPosition) end end) local gibRemote = ReplicatedStorage:FindFirstChild("Remotes") and ReplicatedStorage.Remotes:FindFirstChild("Gib") if gibRemote then pcall(function() gibRemote:FireServer(target, "Torso", targetPosition, hitNormal) end) end return true end local function spinCharacter() if not SETTINGS.Enabled or not localPlayer.Character then return end local rootPart = localPlayer.Character:FindFirstChild("HumanoidRootPart") if not rootPart then return end spinAngle = (spinAngle + SETTINGS.SpinSpeed) % 360 local radians = math.rad(spinAngle) local lookVector = Vector3.new(math.sin(radians), 0, math.cos(radians)) rootPart.CFrame = CFrame.lookAt(rootPart.Position, rootPart.Position + lookVector) end local function GJoIo() if not SETTINGS.Enabled or tick() - lastAttackTime < SETTINGS.AttackCooldown then return end lastAttackTime = tick() if #gg == 0 or not JcB(gg[1]) then gg = HXM() end local target = gg[1] if target then if performAttack(target) then if not JcB(target) then table.remove(gg, 1) end end end end local function mainLoop() spinCharacter() GJoIo() end local function setScriptEnabled(enabled) SETTINGS.Enabled = enabled if enabled then if not mainLoopConnection then if localPlayer.Character then local humanoid = localPlayer.Character:FindFirstChildOfClass("Humanoid") if humanoid then humanoid.AutoRotate = false end end mainLoopConnection = RunService.RenderStepped:Connect(mainLoop) end else if mainLoopConnection then mainLoopConnection:Disconnect() mainLoopConnection = nil if localPlayer.Character then local humanoid = localPlayer.Character:FindFirstChildOfClass("Humanoid") if humanoid then humanoid.AutoRotate = true end end end end end local function createUIControls() local screenGui = Instance.new("ScreenGui") screenGui.Name = "SpinAttackUI" screenGui.Parent = localPlayer:WaitForChild("PlayerGui") screenGui.ResetOnSpawn = false local toggleBtn = Instance.new("TextButton") toggleBtn.Name = "ToggleButton" toggleBtn.Size = UDim2.new(0, 200, 0, 50) toggleBtn.Position = UDim2.new(0, 20, 0, 20) toggleBtn.BackgroundColor3 = Color3.fromRGB(200, 50, 50) toggleBtn.TextColor3 = Color3.new(1, 1, 1) toggleBtn.Font = Enum.Font.SourceSansBold toggleBtn.TextSize = 18 toggleBtn.Text = "旋转攻击: 关闭" toggleBtn.Parent = screenGui local spinSlider = Instance.new("Frame") spinSlider.Name = "SpinSlider" spinSlider.Size = UDim2.new(0, 200, 0, 30) spinSlider.Position = UDim2.new(0, 20, 0, 80) spinSlider.BackgroundColor3 = Color3.fromRGB(60, 60, 60) spinSlider.Parent = screenGui local spinLabel = Instance.new("TextLabel") spinLabel.Name = "Label" spinLabel.Size = UDim2.new(0.6, 0, 1, 0) spinLabel.Position = UDim2.new(0, 5, 0, 0) spinLabel.BackgroundTransparency = 1 spinLabel.Text = "旋转速度: " .. SETTINGS.SpinSpeed spinLabel.TextColor3 = Color3.new(1, 1, 1) spinLabel.TextXAlignment = Enum.TextXAlignment.Left spinLabel.Parent = spinSlider local spinValue = Instance.new("TextBox") spinValue.Name = "ValueBox" spinValue.Size = UDim2.new(0.3, 0, 1, 0) spinValue.Position = UDim2.new(0.7, 0, 0, 0) spinValue.BackgroundColor3 = Color3.fromRGB(80, 80, 80) spinValue.Text = tostring(SETTINGS.SpinSpeed) spinValue.TextColor3 = Color3.new(1, 1, 1) spinValue.Parent = spinSlider toggleBtn.MouseButton1Click:Connect(function() SETTINGS.Enabled = not SETTINGS.Enabled setScriptEnabled(SETTINGS.Enabled) if SETTINGS.Enabled then toggleBtn.BackgroundColor3 = Color3.fromRGB(50, 200, 50) toggleBtn.Text = "旋转攻击: 开启" else toggleBtn.BackgroundColor3 = Color3.fromRGB(200, 50, 50) toggleBtn.Text = "旋转攻击: 关闭" end end) spinValue.FocusLost:Connect(function() local newValue = tonumber(spinValue.Text) if newValue and newValue >= 1 and newValue <= 1000 then SETTINGS.SpinSpeed = newValue spinLabel.Text = "旋转速度: " .. SETTINGS.SpinSpeed else spinValue.Text = tostring(SETTINGS.SpinSpeed) end end) end localPlayer.CharacterAdded:Connect(function() if SETTINGS.Enabled then local humanoid = localPlayer.Character:WaitForChild("Humanoid") humanoid.AutoRotate = false end end) createUIControls()
